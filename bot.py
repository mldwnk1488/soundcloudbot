import os
import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.exceptions import TelegramConflictError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def main():
    BOT_TOKEN = os.environ.get("BOT_TOKEN", "").strip()
    
    if not BOT_TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    logger.info(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞: {len(BOT_TOKEN)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = Bot(
            token=BOT_TOKEN,
            default=DefaultBotProperties(parse_mode=ParseMode.HTML)
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: @{bot_info.username} (ID: {bot_info.id})")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        storage = MemoryStorage()
        dp = Dispatcher(storage=storage)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
        try:
            from handlers.start import router as start_router
            dp.include_router(start_router)
            logger.info("‚úÖ –†–æ—É—Ç–µ—Ä start –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –†–æ—É—Ç–µ—Ä start –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        
        try:
            from handlers.search import router as search_router
            dp.include_router(search_router)
            logger.info("‚úÖ –†–æ—É—Ç–µ—Ä search –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –†–æ—É—Ç–µ—Ä search –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        
        try:
            from handlers.download import router as download_router
            dp.include_router(download_router)
            logger.info("‚úÖ –†–æ—É—Ç–µ—Ä download –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –†–æ—É—Ç–µ—Ä download –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        
        try:
            from handlers.queue import router as queue_router
            dp.include_router(queue_router)
            logger.info("‚úÖ –†–æ—É—Ç–µ—Ä queue –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –†–æ—É—Ç–µ—Ä queue –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        
        try:
            from handlers.admin import router as admin_router
            dp.include_router(admin_router)
            logger.info("‚úÖ –†–æ—É—Ç–µ—Ä admin –ø–æ–¥–∫–ª—é—á–µ–Ω")
        except ImportError as e:
            logger.warning(f"‚ö†Ô∏è –†–æ—É—Ç–µ—Ä admin –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        
        # üî• –ó–ê–ü–£–°–ö–ê–ï–ú –ü–û–õ–õ–ò–ù–ì –° –û–ë–†–ê–ë–û–¢–ö–û–ô –ö–û–ù–§–õ–ò–ö–¢–û–í
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–ª–∏–Ω–≥...")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª—é–±—ã–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–µ—Å—Å–∏–∏
        await bot.delete_webhook(drop_pending_updates=True)
        logger.info("üßπ –í–µ–±—Ö—É–∫ —É–¥–∞–ª–µ–Ω, pending updates –æ—á–∏—â–µ–Ω—ã")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
        
    except TelegramConflictError as e:
        logger.error("üí• –ö–û–ù–§–õ–ò–ö–¢: –ó–∞–ø—É—â–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞!")
        logger.info("üí° –†–µ—à–µ–Ω–∏–µ: –û—Å—Ç–∞–Ω–æ–≤–∏ –≤—Å–µ –¥—Ä—É–≥–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞")
        logger.info("üí° –ù–∞ Render: Restart service –∏–ª–∏ Clear Build Cache")
        
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    finally:
        if 'bot' in locals():
            await bot.session.close()
        logger.info("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã")

if __name__ == "__main__":
    print("=" * 50)
    print("üéµ SOUNDCLOUD MUSIC BOT")
    print("=" * 50)
    print("üîç –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    asyncio.run(main())
