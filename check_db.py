import sqlite3
import os

DB_PATH = os.path.expanduser("~/.music_bot/bot.db")

def check_db():
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´:\n")
    
    # –Æ–∑–µ—Ä—ã
    cursor.execute("SELECT COUNT(*) FROM users")
    users_count = cursor.fetchone()[0]
    print(f"üë• –Æ–∑–µ—Ä–æ–≤: {users_count}")
    
    # –ó–∞–≥—Ä—É–∑–∫–∏
    cursor.execute("SELECT COUNT(*) FROM download_history")
    downloads_count = cursor.fetchone()[0]
    print(f"üì• –ó–∞–≥—Ä—É–∑–æ–∫: {downloads_count}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    cursor.execute("SELECT SUM(tracks_count), SUM(file_size_mb) FROM statistics")
    tracks, size = cursor.fetchone()
    print(f"üéµ –¢—Ä–µ–∫–æ–≤: {tracks or 0}")
    print(f"üíæ –†–∞–∑–º–µ—Ä: {size or 0:.1f} MB")
    
    print(f"\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:")
    cursor.execute("""
        SELECT user_id, playlist_title, tracks_count, file_size_mb, created_at 
        FROM download_history 
        ORDER BY created_at DESC 
        LIMIT 3
    """)
    
    for row in cursor.fetchall():
        user_id, title, tracks, size, date = row
        print(f"‚Ä¢ {title} ({tracks} —Ç—Ä–µ–∫–æ–≤, {size:.1f}MB)")
    
    conn.close()

if __name__ == "__main__":
    check_db()